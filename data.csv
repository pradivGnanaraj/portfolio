images;title;url;description
1.png;My To-Do Application	;https://github.com/pradivGnanaraj/00_todo_desktop_app_PYTHON	;I created a versatile To-Do application that offers users multiple ways to manage their tasks efficiently. This project showcases my proficiency in Python programming, user interface design, and data management. The application features a command-line interface (CLI), a graphical user interface (GUI) using PySimpleGUI, and a web-based interface using Streamlit.
2.png;Portfolio Web Application	;https://github.com/pradivGnanaraj/00_1_app2_Portfolio_PYTHON	;This project serves as a showcase of my skills, creativity, and dedication to the world of technology. Through this application, I aim to introduce myself, share a collection of Python projects, and offer a means of direct communication.
3.png;PDF Generation Script	;https://github.com/pradivGnanaraj/00_3_convert_to_PDF_documents_PYTHON	;This project highlights the power of automation and creativity by using Python's fpdf library to generate stunning PDF documents from CSV data. With this script, I aim to demonstrate how data can be transformed into elegant and organized visual documents.
4.png;Invoice to PDF conversion script	;https://github.com/pradivGnanaraj/00_3_pdf_invoice_genertor_PYTHON	;This endeavor showcases the power of automation and innovation in the world of finance and documentation. With this script, I've harnessed the capabilities of Python to effortlessly convert Excel invoices into visually organized PDF documents.
5.png;News Email Sender	;https://github.com/pradivGnanaraj/00_5_Daily_News_API_PYTHON	;This initiative brings the latest news updates directly to your email inbox. With this Python-powered script, you can effortlessly receive a curated list of news articles on your chosen topic, all neatly compiled and delivered to you via email.
7.png;Weather Data API web application	;https://github.com/pradivGnanaraj/00_6_WeatherData_API_PYTHON	;The Weather Data API Web Application is a Flask-powered project that offers a user-friendly interface to access and visualize weather data from various stations. This application provides a seamless experience for retrieving weather information for specific dates, years, and stations through API endpoints.
8.png;Weather Forecast Web Application	;https://github.com/pradivGnanaraj/00_7_Weather_data_dashboard_PYTHON	;The Weather Forecast Web Application is a user-friendly interface built using Streamlit and Python. This application empowers users to access weather forecasts for specific locations, providing insights into temperature and sky conditions for the upcoming days.
9.png;Sentiment Analysis for Book	;https://github.com/pradivGnanaraj/00_08_Books_NLP_PYTHON	;The "Sentiment Analysis for Book Text" project is a Python script that performs sentiment analysis on a sample book text using the Natural Language Toolkit (NLTK) library. The script processes the book's content, analyzes the sentiment of each chapter, and identifies the most positive and negative chapters based on sentiment polarity. This project showcases the application of NLTK's powerful tools for text analysis, including regular expressions, stopword removal, and sentiment scoring.
10.png;Motion Detection and Email Notification System	;https://github.com/pradivGnanaraj/00_09_Webcam_email_OPENCV_PYTHON	;The "Motion Detection and Email Notification System" is a Python project that demonstrates real-time motion detection using a webcam and sends email notifications when motion is detected. The system captures video frames, analyzes them for changes indicating motion, captures images of detected motion, and sends email notifications along with the captured images. This project showcases the integration of computer vision and email communication to create a practical application for security and monitoring purposes.
1.png;Web Scrapper	;https://github.com/pradivGnanaraj/00_10_web_scrapper_SQLITE	;The provided script, â€œmain.py" in this project, is a versatile tool that combines web scraping, data extraction, and email notification functionalities. This script is designed to monitor a website for upcoming tour events, extract relevant information using specified CSS selectors, store the extracted data in an SQLite database, and notify users via email about new events.
2.png;Hotel Reservation System	;https://github.com/pradivGnanaraj/00_11_hotel_booking_PYTHON	;In this portfolio project, I developed a simple Hotel Reservation System using Python. The project aims to simulate a basic reservation process, allowing users to book hotels, generate reservation tickets, and validate credit card information for payments.
3.png;Super Mario Implementation in Python	;https://github.com/pradivGnanaraj/00_12_super_mario_game_PYTHON	;This project showcases my implementation of the classic Super Mario game using Python and the Pygame library. Inspired by Meth-Meth-Method's game, the project offers a simplified version of the popular game, featuring character controls, multiple levels, sound effects, and more.
4.png;Student Management System (SQLite) PyQt6	;https://github.com/pradivGnanaraj/00_13_SQLite_management_system_python	;In this portfolio project, I present two interactive applications developed using Python and the PyQt6 library. These applications demonstrate my proficiency in creating user-friendly graphical interfaces and handling real-world scenarios. The project includes a Student Management System and an Age Calculator, each showcasing distinct functionalities.
5.png;Student Management System (MySQL) PyQt6	;https://github.com/pradivGnanaraj/00_14_MySQL_Management_system_python	;In this portfolio project, I present a Student Management System implemented using the PyQt6 library in Python. The application offers a user-friendly graphical interface for efficiently managing student records within a MySQL database. With functionalities like adding, editing, searching, and deleting student information, this project showcases my proficiency in creating interactive desktop applications.
5.png;ChatBot Application with Openai	;https://github.com/pradivGnanaraj/00_15_ChatGPT_chatbot_python	;The Chatbot Application is a project that showcases the integration of the OpenAI API and the PyQt6 library to create an interactive chatbot interface. The application allows users to engage in conversations with a chatbot, receiving responses generated by OpenAI's language model.
7.png;Form Submission Web App using Flask	;https://github.com/pradivGnanaraj/00_16_FLASK_form_python	;This project showcases a web application built with Flask, a Python web framework, that allows users to submit their personal details through a user-friendly form. The form data is stored in a SQLite database, and upon submission, an email is sent to the user's provided email address with their submitted information. The application utilizes Flask's routing, Flask-SQLAlchemy for database management, and Flask-Mail for sending emails. It features instance-specific configurations, HTML templates for rendering pages, and demonstrates the integration of various technologies to create a functional and interactive web application. This project offers an opportunity to explore web development concepts and serves as a foundation for building more complex applications.
8.png;Rectangle guessing game using Turtle	;https://github.com/pradivGnanaraj/00_app17_Geometry_game_oops_python	;The "Rectangle Guessing Game using Turtle" is a Python script that implements a simple yet interactive guessing game. In this game, players are presented with a randomly generated rectangle on the screen. They are then prompted to guess whether a specific point lies within the rectangle and to estimate the area of the rectangle. The game provides visual feedback using the turtle graphics library, displaying the rectangle and the guessed point.
9.png;Flatmate Bill calculator and Report Generator	;https://github.com/pradivGnanaraj/00_app18_flatmate_bill_oops_python	;The "Flatmates Bill Calculator and Report Generator" is a Python script that streamlines bill splitting and generates PDF reports for shared expenses among flatmates. This practical tool allows users to input the bill amount, period, and information about each flatmate's stay duration. The script then calculates the fair amount each flatmate should pay based on their respective stay days and generates a clear PDF report detailing the bill breakdown.
10.png;Shape Drawing Application	;https://github.com/pradivGnanaraj/00_app19_math_painter_oops_python	;The "Shape Drawing Application" is a Python project that empowers users to create and visualize rectangles and squares on a canvas. This application, developed using object-oriented programming principles, utilizes the numpy and Pillow (PIL) libraries to create the canvas and render shapes. Users can input dimensions, positions, and color details for the shapes, and the final canvas can be saved as an image.
11.png;Photo Sharing App	;https://github.com/pradivGnanaraj/00_app20_webcamphoto_share_oops_python	;The Photo Sharing App is a Kivy-based Python application designed to provide users with a simple yet powerful platform for capturing, sharing, and managing their photos. With an intuitive and user-friendly interface, this app enables users to capture images using their device's camera, generate shareable links for these images, and conveniently copy the links to their clipboard. Developed using the Kivy framework, the app exhibits my expertise in creating interactive and visually appealing graphical user interfaces.
12.png;Flatmates Bill Calculator	;https://github.com/pradivGnanaraj/00_app21_flatmate_weapp_oops_python	;The "Flatmates Bill Calculator" is a web application built using Flask that facilitates easy bill sharing and calculation among flatmates. This project offers a user-friendly interface where users can input bill details, including the amount and period, along with information about each flatmate's stay duration. The application then intelligently calculates the fair share for each flatmate based on their respective time in the house.
13.png;Calorie Calculator	;https://github.com/pradivGnanaraj/00_app22_calories_app_oops_python	;The Calorie Calculator is a web application designed to help users estimate their optimal daily calorie intake based on various factors such as weight, height, age, and local temperature. The application is built using the Flask framework and incorporates external temperature data using web scraping techniques. Its user-friendly interface allows users to input their information and receive accurate calorie calculations.
14.png;Email News Sender	;https://github.com/pradivGnanaraj/00_app23_autoamte_emails_oops_python	;The "Email News Sender" project is a Python script designed to deliver personalized news updates to recipients' email addresses based on their specified interests. This project employs the News API to fetch recent articles and the Yagmail library to send emails. With a well-organized structure, the project allows you to easily configure API keys, Gmail credentials, and recipient information.
15.png;Web Application with instant Dictionary	;https://github.com/pradivGnanaraj/00_app24_isntant_dict_webapp_api_oops_python	;This project showcases a dynamic web application designed to provide instant definitions for English words. Leveraging the JustPy framework, the application offers a user-friendly interface with multiple pages, including Home, Dictionary, and About. Users can input words on the Dictionary page and receive real-time definitions as they type. Definitions are sourced from a curated dataset. The project also features thoughtful navigation and styling, enhancing the user experience. The repository includes comprehensive documentation, making it easy for others to explore and contribute. If you're looking for a practical example of a web application using a Python framework, this project serves as an excellent reference.
16.png;Instant Dictionary API and Documentation	;https://github.com/pradivGnanaraj/00_app25_instant_dict_api_oops_python	;The Instant Dictionary API and Documentation project provides a simple yet powerful API for retrieving instant word definitions. It also includes a user-friendly documentation page that explains how to use the API effectively.
17.png;Cinema Seat Booking System	;https://github.com/pradivGnanaraj/00_app26_cinema_booking_app_oops_python	;The Cinema Seat Booking System is a Python application that simulates a cinema seat booking experience. It allows users to select and purchase cinema seats, validate their bank card information, and receive a digital ticket in PDF format.